// main js file
// 1. npm init -: this will create a file package.json
// package.json is a metadata file for a Node.js project that holds important information about the project

// 2. npm i express -: to install express
// when this will run a folder is made node_module where all the libraries are installed
// so the express code will be downloaded and will be put it in the express folder in node_modules
// and also we can see in the package.json there will be a new thing added "dependencies": { "express": "^5.1.0" }
// but what do this "^5.1.0" ofcourse this is version but what is ^ and why it have set set of numbers, let me explain
// 5.1.0 = MAJOR.MINOR.PATCH lets see what these mean
// PATCH represents a small change or bug fixes
// MINOR represents new features added with the backward compatible ie we can install this library in any 4.x.x
// MAJOR represents breaking changes ie if we installed this it will effect our existing code with version less than this MAJOR version
// ^ this means the library will auto update when new version of MINOR or PATCH is released (will not update if MAJOR v released)
// instead of this ^ we can use this also ~
// ~ represents it will auto update patch version only
// these are the dependencies our project needed or we can say our project is dependent on these libraries
// but while we installed express there are lot more folders added, these are the libraries or dependencies 
// used by the express and if this libraray has any dependencies it will also be installed
// we can also see a new package-lock.json
// this Locks exact versions of dependencies installed to ensure consistency across environments
// as we given ^ it will auto update the version but we cannot see the version currently using now
// if it is updated 
/// but in package-lock.json we can see the exact version of all dependencies we are using now

// now to automatically refresh the server after we made changes we use nodemon library
// here i have installed it globally on my computer so that i dont want install for every projects
// npm i -g nodemon
// now if we run nodemon src/app.js it will automatically refresh server
// for simplicity we can add a script in package.json
// "scripts": {
//     "start": "node src/app.js",
//     "dev" : "nodemon src/app.js"
//   }
// now if we run
// npm run start - it will run run in normal way
// npm run dev - it will run in nodemon


now lets make a git repo and push to it, for that
git init
now we will see a lot of files but these are not ours it is by node_modules
we does not need these files to push 
so for that we will make a .gitignore file and give the path of file 
which we want to ignore
now suppose we want to download this code and want use
but we wont have node_modules so how the dependencies work
dont worry
just run a command npm install
this will install all the dependencies in package.json and the exact version from package-lock.json
so as long as we have package.json and package-lock.json we does not need to worry about dependencies

also first connect to database and then start listen to port or else if database didnot connect successfully
and and user make api call it wont work
